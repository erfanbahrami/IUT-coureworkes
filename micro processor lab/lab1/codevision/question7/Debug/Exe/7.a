;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2020-10-04
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Declare your global variables here
;void Subroutine_1(void)
; 0000 001C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001D     int counter = 0;
; 0000 001E     for (counter = 0; counter < 4; counter++)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	counter -> R16,R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001F     {
; 0000 0020         PORTB = 0xFF;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0021         delay_ms(500);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0022         PORTB = 0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0023         delay_ms(500);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0024     }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0025 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;void Subroutine_2(void)
; 0000 0027 {
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0028         //3000/8=375
; 0000 0029       PORTB.0 = 1;delay_ms(375);PORTB.0 = 0;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002A 
; 0000 002B       PORTB.1 = 1;delay_ms(375);PORTB.1 = 0;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002C 
; 0000 002D       PORTB.2 = 1;delay_ms(375);PORTB.2 = 0;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 002E 
; 0000 002F       PORTB.3 = 1;delay_ms(375);PORTB.3 = 0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0030 
; 0000 0031       PORTB.4 = 1;delay_ms(375);PORTB.4 = 0;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0032 
; 0000 0033       PORTB.5 = 1;delay_ms(375);PORTB.5 = 0;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0034 
; 0000 0035       PORTB.6 = 1;delay_ms(375);PORTB.6 = 0;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0036 
; 0000 0037       PORTB.7 = 1;delay_ms(375);PORTB.7 = 0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0038 }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;void Subroutine_3(void)
; 0000 003A {
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003B       int a = PINA;
; 0000 003C       PORTB = a;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;	a -> R16,R17
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 003D }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;void Subroutine_4(void)
; 0000 003F {
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0040       int counter = 0;
; 0000 0041       char array[] = {  0b00111111,      // 9  7_segment
; 0000 0042                         0b00000110,      // 8  7_segment
; 0000 0043                         0b01011011,      // 7  7_segment
; 0000 0044                         0b01001111,      // 6  7_segment
; 0000 0045                         0b01100110,      // 5  7_segment
; 0000 0046                         0b01101101,      // 4  7_segment
; 0000 0047                         0b01111101,      // 3  7_segment
; 0000 0048                         0b00000111,      // 2  7_segment
; 0000 0049                         0b01111111,      // 1  7_segment
; 0000 004A                         0b01101111       // 0  7_segment
; 0000 004B                         };
; 0000 004C 
; 0000 004D       PORTD.0 = 0;PORTD.1 = 0;PORTD.2 = 0;PORTD.3 = 0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;	counter -> R16,R17
;	array -> Y+2
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 004E       for (counter = 9; counter>=0 ; counter--)
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 004F       {
; 0000 0050             PORTC = array[counter];
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0051             delay_ms(1000);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0052       }
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0053 
; 0000 0054 }
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;void Subroutine_5(void)
; 0000 0056 {
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0057       char arr[] = {  0b00111111,      // 9  7_segment
; 0000 0058                         0b00000110,      // 8  7_segment
; 0000 0059                         0b01011011,      // 7  7_segment
; 0000 005A                         0b01001111,      // 6  7_segment
; 0000 005B                         0b01100110,      // 5  7_segment
; 0000 005C                         0b01101101,      // 4  7_segment
; 0000 005D                         0b01111101,      // 3  7_segment
; 0000 005E                         0b00000111,      // 2  7_segment
; 0000 005F                         0b01111111,      // 1  7_segment
; 0000 0060                         0b01101111       // 0  7_segment
; 0000 0061                         };
; 0000 0062       char arr2[] = { 0b10111111,     // 9  7_segment with dip points
; 0000 0063                         0b10000110,      // 8  7_segment with dip points
; 0000 0064                         0b11011011,      // 7  7_segment with dip points
; 0000 0065                         0b11001111,      // 6  7_segment with dip points
; 0000 0066                         0b11100110,      // 5  7_segment with dip points
; 0000 0067                         0b11101101,      // 4  7_segment with dip points
; 0000 0068                         0b11111101,      // 3  7_segment with dip points
; 0000 0069                         0b10000111,      // 2  7_segment with dip points
; 0000 006A                         0b11111111,      // 1  7_segment with dip points
; 0000 006B                         0b11101111       // 0  7_segment with dip points
; 0000 006C                         };
; 0000 006D       int number = 0 , counter = 0;
; 0000 006E       unsigned int a0 , a1, a2, a3;
; 0000 006F       unsigned int b0 , b1 , b2 , b3;
; 0000 0070       number = PINA;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;	arr -> Y+30
;	arr2 -> Y+20
;	number -> R16,R17
;	counter -> R18,R19
;	a0 -> R20,R21
;	a1 -> Y+18
;	a2 -> Y+16
;	a3 -> Y+14
;	b0 -> Y+12
;	b1 -> Y+10
;	b2 -> Y+8
;	b3 -> Y+6
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0071       number = number * 10;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0072       while (number >= 0)
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0073       {
; 0000 0074             a0 = number % 10;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0075             b0 = number / 10;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0076 
; 0000 0077             a1 = b0 % 10;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0078             b1 = b0 / 10;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0079 
; 0000 007A             a2 = b1 % 10;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 007B             b2 = b1 / 10;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 007C 
; 0000 007D             a3 = b2 % 10;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 007E             b3 = b2 / 10;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 007F 
; 0000 0080             PORTC = arr[a3];
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0081             PORTD = 0b00001110; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0082 
; 0000 0083             PORTC = arr[a2];
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0084             PORTD = 0b00001101; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0085 
; 0000 0086             PORTC = arr2[a1];
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0087             PORTD = 0b00001011; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0088 
; 0000 0089             PORTC = arr[a0];
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 008A             PORTD = 0b00000111; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 008B 
; 0000 008C             counter = counter + 1;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 008D             if (counter == 20)
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 008E             {
; 0000 008F                   number  = number - 2;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0090                   counter = 0;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0091             }
; 0000 0092       }
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0093 }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;void Subroutine_6(void)
; 0000 0095 {
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0096     char arr[] = {      0b00111111,      // 9  7_segment
; 0000 0097                         0b00000110,      // 8  7_segment
; 0000 0098                         0b01011011,      // 7  7_segment
; 0000 0099                         0b01001111,      // 6  7_segment
; 0000 009A                         0b01100110,      // 5  7_segment
; 0000 009B                         0b01101101,      // 4  7_segment
; 0000 009C                         0b01111101,      // 3  7_segment
; 0000 009D                         0b00000111,      // 2  7_segment
; 0000 009E                         0b01111111,      // 1  7_segment
; 0000 009F                         0b01101111       // 0  7_segment
; 0000 00A0                         };
; 0000 00A1     char arr2[] = {     0b10111111,      // 9  7_segment with dip points
; 0000 00A2                         0b10000110,      // 8  7_segment with dip points
; 0000 00A3                         0b11011011,      // 7  7_segment with dip points
; 0000 00A4                         0b11001111,      // 6  7_segment with dip points
; 0000 00A5                         0b11100110,      // 5  7_segment with dip points
; 0000 00A6                         0b11101101,      // 4  7_segment with dip points
; 0000 00A7                         0b11111101,      // 3  7_segment with dip points
; 0000 00A8                         0b10000111,      // 2  7_segment with dip points
; 0000 00A9                         0b11111111,      // 1  7_segment with dip points
; 0000 00AA                         0b11101111       // 0  7_segment with dip points
; 0000 00AB                         };
; 0000 00AC     int number=0 , counter=0 , temp=0 ;
; 0000 00AD     unsigned int a0 , a1, a2, a3;
; 0000 00AE     unsigned int b0 , b1 , b2 , b3;
; 0000 00AF     number = PINA;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;	arr -> Y+32
;	arr2 -> Y+22
;	number -> R16,R17
;	counter -> R18,R19
;	temp -> R20,R21
;	a0 -> Y+20
;	a1 -> Y+18
;	a2 -> Y+16
;	a3 -> Y+14
;	b0 -> Y+12
;	b1 -> Y+10
;	b2 -> Y+8
;	b3 -> Y+6
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00B0     number = number * 10;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00B1     while (number >= 0)
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00B2     {
; 0000 00B3             if (PIND.7 == 0)
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00B4             {
; 0000 00B5                   temp = (number % 10);
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00B6                   number = number - temp;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00B7             }
; 0000 00B8             if (PIND.6 == 0)
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00B9             {
; 0000 00BA                   temp = ((number / 10) % 10);
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00BB                   temp = temp * 10;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00BC                   number = number - temp;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00BD             }
; 0000 00BE             if (PIND.5 == 0)
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00BF             {
; 0000 00C0                   temp = ((number / 100) % 10);
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00C1                   temp = temp * 100;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00C2                   number = number - temp;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00C3             }
; 0000 00C4             if (PIND.4 == 0)
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00C5             {
; 0000 00C6                   temp = ((number / 1000) % 10);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00C7                   temp = temp * 1000;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00C8                   number = number - temp;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00C9             }
; 0000 00CA             a0 = number % 10;
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00CB             b0 = number / 10;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00CC 
; 0000 00CD             a1 = b0 % 10;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00CE             b1 = b0 / 10;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00CF 
; 0000 00D0             a2 = b1 % 10;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 00D1             b2 = b1 / 10;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00D2 
; 0000 00D3             a3 = b2 % 10;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00D4             b3 = b2 / 10;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00D5 
; 0000 00D6             PORTC = arr[a3];
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00D7             PORTD = 0b00001110; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00D8 
; 0000 00D9             PORTC = arr[a2];
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00DA             PORTD = 0b00001101; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00DB 
; 0000 00DC             PORTC = arr2[a1];
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00DD             PORTD = 0b00001011; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00DE 
; 0000 00DF             PORTC = arr[a0];
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00E0             PORTD = 0b00000111; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00E1 
; 0000 00E2             counter = counter + 1;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00E3             if (counter == 20)
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00E4             {
; 0000 00E5                   number  = number - 2;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00E6                   counter = 0;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00E7             }
; 0000 00E8       }
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00E9 }
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;void main(void)
; 0000 00EB {
;PCODE: $000001C3 VOL: 0
; 0000 00EC // Declare your local variables here
; 0000 00ED 
; 0000 00EE // Input/Output Ports initialization
; 0000 00EF // Port A initialization
; 0000 00F0 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00F1 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00F2 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00F3 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 00F4 
; 0000 00F5 // Port B initialization
; 0000 00F6 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00F7 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 00F8 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00F9 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00FA 
; 0000 00FB // Port C initialization
; 0000 00FC // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00FD DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00FE // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00FF PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 0100 
; 0000 0101 // Port D initialization
; 0000 0102 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0103 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 0104 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0105 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 0106 
; 0000 0107 while (1)
;PCODE: $000001D4 VOL: 0
; 0000 0108       {
; 0000 0109      // Place your code here
; 0000 010A             Subroutine_1() ;
;PCODE: $000001D5 VOL: 0
; 0000 010B             Subroutine_2() ;
;PCODE: $000001D6 VOL: 0
; 0000 010C             Subroutine_4() ;
;PCODE: $000001D7 VOL: 0
; 0000 010D             while(1)
;PCODE: $000001D8 VOL: 0
; 0000 010E             {
; 0000 010F                 Subroutine_3() ;
;PCODE: $000001D9 VOL: 0
; 0000 0110                 Subroutine_5() ;
;PCODE: $000001DA VOL: 0
; 0000 0111                 Subroutine_6() ;
;PCODE: $000001DB VOL: 0
; 0000 0112             }
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0113       }
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0114 }
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;
