;/*******************************************************
;Project : Assignment 5
;Version :
;Date    : 2020-10-28
;Author  : Mohammad Sadra Rimaz
;Company :
;Comments:
;*******************************************************/
;
;#include <headerFile.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;char b=0;
;char f;
;
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011     changeDutyCycle();
;PCODE: $0000000F VOL: 0
; 0000 0012 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;// Timer2 overflow interrupt service routine
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 0016 {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0017     TCNT2=0x3D;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0018     b = b + 1;
;PCODE: $00000017 VOL: 0
; 0000 0019     if (b==4)
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001A     {
; 0000 001B         stepperMotorSignal();
;PCODE: $0000001B VOL: 0
; 0000 001C         b = 0;
;PCODE: $0000001C VOL: 0
; 0000 001D     }
; 0000 001E 
; 0000 001F }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;void main(void)
; 0000 0022 {
;PCODE: $00000021 VOL: 0
; 0000 0023 
; 0000 0024     init();
;PCODE: $00000022 VOL: 0
; 0000 0025 
; 0000 0026     #asm("sei")
;PCODE: $00000023 VOL: 0
	sei
;PCODE: $00000024 VOL: 0
; 0000 0027 
; 0000 0028     b = 0x01;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0029     f = 1;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002A     while (1)
;PCODE: $00000029 VOL: 0
; 0000 002B     {
; 0000 002C         flag = 1;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002D         lcd_clear();
;PCODE: $0000002C VOL: 0
; 0000 002E         lcd_puts("w=1 rps\nClockwise");
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002F         delay_ms(3000);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0030         flag = 0;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0031         lcd_clear();
;PCODE: $00000034 VOL: 0
; 0000 0032         lcd_puts("w=0 rps");
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0033         delay_ms(3000);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0034         flag = 2;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0035         lcd_clear();
;PCODE: $0000003C VOL: 0
; 0000 0036         lcd_puts("w=1 rps\nCounterclockwise ");
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0037         delay_ms(3000);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0038         flag = 0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0039         lcd_clear();
;PCODE: $00000044 VOL: 0
; 0000 003A         lcd_puts("w=0 rps");
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 003B         delay_ms(3000);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 003C     }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 003D }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0

	.DSEG
_0x7:
	.BYTE 0x3C
