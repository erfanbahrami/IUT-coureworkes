;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;#include <string.h>
;// ba komak az site https://www.electronicwings.com/avr-atmega/4x4-keypad-interfacing-with-atmega1632
;#define KEY_PRT        PORTB
;#define KEY_DDR        DDRB
;#define KEY_PIN        PINB
;
;void init ( void )
; 0001 000B {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 000C     // Declare your local variables here
; 0001 000D 
; 0001 000E // Input/Output Ports initialization
; 0001 000F // Port A initialization
; 0001 0010 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0001 0011 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0012 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0001 0013 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0014 
; 0001 0015 // Port B initialization
; 0001 0016 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0017 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 0018 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0019 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 001A 
; 0001 001B // Port C initialization
; 0001 001C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 001D DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 001E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 001F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 0020 
; 0001 0021 // Port D initialization
; 0001 0022 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0023 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 0024 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0025 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 0026 
; 0001 0027 // External Interrupt(s) initialization
; 0001 0028 // INT0: Off
; 0001 0029 // INT1: On
; 0001 002A // INT1 Mode: Rising Edge
; 0001 002B // INT2: Off
; 0001 002C GICR|=(1<<INT1) | (0<<INT0) | (0<<INT2);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0001 002D MCUCR=(1<<ISC11) | (1<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0001 002E MCUCSR=(0<<ISC2);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0001 002F GIFR=(1<<INTF1) | (0<<INTF0) | (0<<INTF2);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0001 0030 
; 0001 0031 // Alphanumeric LCD initialization
; 0001 0032 // Connections are specified in the
; 0001 0033 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0001 0034 // RS - PORTA Bit 0
; 0001 0035 // RD - PORTA Bit 1
; 0001 0036 // EN - PORTA Bit 2
; 0001 0037 // D4 - PORTA Bit 4
; 0001 0038 // D5 - PORTA Bit 5
; 0001 0039 // D6 - PORTA Bit 6
; 0001 003A // D7 - PORTA Bit 7
; 0001 003B // Characters/line: 16
; 0001 003C lcd_init(16);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0001 003D 
; 0001 003E // Global enable interrupts
; 0001 003F #asm("sei")
;PCODE: $0000002A VOL: 0
	sei
;PCODE: $0000002B VOL: 0
; 0001 0040 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;
;void Subroutine_1(void)
; 0001 0043 {
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0001 0044       lcd_gotoxy(0, 0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 0045       lcd_puts("Erfan Bahrami");
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 0046       lcd_gotoxy(0, 1);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 0047       lcd_puts("9624513");
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 0048       delay_ms(3000);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0001 0049 }
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0

	.DSEG
_0x20003:
	.BYTE 0x16
;
;void Subroutine_2(void)
; 0001 004C {

	.CSEG
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 004D         char string[] = "Welcome to the online lab classes due to Corona disease.";
; 0001 004E         char show[16];
; 0001 004F          //  char show2[] = "---------------";
; 0001 0050         int counter = 0;
; 0001 0051         delay_ms(500);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;	string -> Y+18
;	show -> Y+2
;	counter -> R16,R17
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0052         for(counter = 0; counter<strlen(string); counter++)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0053         {
; 0001 0054             lcd_gotoxy(0, 1);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 0055             strncpy(show, &string[counter], 16);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0056          //   lcd_gotoxy(0, 0);
; 0001 0057          //   lcd_puts(show2);
; 0001 0058             lcd_puts(show);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0001 0059             delay_ms(200);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0001 005A             lcd_clear();
;PCODE: $0000006A VOL: 0
; 0001 005B         }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0001 005C }
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;unsigned char Subroutine_3(void)
; 0001 005E {
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0001 005F         unsigned char col, row , temp;
; 0001 0060         unsigned char array[4][4] = {   {'0','1','2','3'},
; 0001 0061                                         {'4','5','6','7'},
; 0001 0062                                         {'8','9','A','B'},
; 0001 0063                                         {'C','D','E','F'}};
; 0001 0064         KEY_DDR = 0xf0;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;	col -> R17
;	row -> R16
;	temp -> R19
;	array -> Y+4
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0001 0065         KEY_PRT = 0xff;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0001 0066         /*  check for columns */
; 0001 0067         do {
;PCODE: $00000083 VOL: 0
; 0001 0068             KEY_PRT = 0xff;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0001 0069             col= (KEY_PIN & 0x0f);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0001 006A         } while (col != 0x00);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0001 006B 
; 0001 006C         do {
;PCODE: $0000008E VOL: 0
; 0001 006D             KEY_PRT = 0xff;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0001 006E             col= (KEY_PIN & 0x0f);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0001 006F         } while (col == 0x00);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0001 0070 
; 0001 0071         do {
;PCODE: $00000099 VOL: 0
; 0001 0072             do {
;PCODE: $0000009A VOL: 0
; 0001 0073                   delay_ms(20);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0001 0074                   col = (KEY_PIN & 0x0f);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0001 0075             } while (col == 0x00);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0001 0076 
; 0001 0077             delay_ms(20);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0001 0078             col = (KEY_PIN & 0x0f);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0001 0079 
; 0001 007A         } while (col == 0x00);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0001 007B 
; 0001 007C         /* now check for rows */
; 0001 007D         while(1)
;PCODE: $000000B1 VOL: 0
; 0001 007E         {
; 0001 007F                 KEY_PRT = 0x1f;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0001 0080                 col = (KEY_PIN & 0x0f);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0001 0081                 if (col != 0x00)
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0001 0082                 {
; 0001 0083                     row=0;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0001 0084                     break;
;PCODE: $000000BB VOL: 0
; 0001 0085                 }
; 0001 0086 
; 0001 0087                 KEY_PRT = 0x2f;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0001 0088                 col = (KEY_PIN & 0x0f);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0001 0089                 if (col != 0x00)
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0001 008A                 {
; 0001 008B                     row=1;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0001 008C                     break;
;PCODE: $000000C6 VOL: 0
; 0001 008D                 }
; 0001 008E 
; 0001 008F                 KEY_PRT = 0x4f;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0001 0090                 col = (KEY_PIN & 0x0f);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0001 0091                 if (col != 0x00)
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0001 0092                 {
; 0001 0093                     row=2;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0001 0094                     break;
;PCODE: $000000D1 VOL: 0
; 0001 0095                 }
; 0001 0096 
; 0001 0097                 KEY_PRT = 0x8f;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0001 0098                 col = (KEY_PIN & 0x0f);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0001 0099                 if (col != 0x00)
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0001 009A                 {
; 0001 009B                     row=3;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0001 009C                     break;
;PCODE: $000000DC VOL: 0
; 0001 009D                 }
; 0001 009E       }
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0001 009F 
; 0001 00A0         if (col == 0x01)
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0001 00A1                 temp = (array[row][0]);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0001 00A2         else if (col == 0x02)
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0001 00A3                 temp =(array[row][1]);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0001 00A4         else if (col == 0x04)
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0001 00A5                 temp =(array[row][2]);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0001 00A6         else
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0001 00A7                 temp =(array[row][3]);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0001 00A8         return temp ;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0001 00A9 }
;PCODE: $00000111 VOL: 0
;
;void Subroutine_5(void)
; 0001 00AC {
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0001 00AD         unsigned char first_number, second_number , number;
; 0001 00AE 
; 0001 00AF          while(1)
;PCODE: $00000114 VOL: 0
;	first_number -> R17
;	second_number -> R16
;	number -> R19
;PCODE: $00000115 VOL: 0
; 0001 00B0         {
; 0001 00B1                 lcd_clear();
;PCODE: $00000116 VOL: 0
; 0001 00B2                 lcd_gotoxy(0, 0);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0001 00B3                 lcd_puts("Speed??(0-50)");
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0001 00B4                 lcd_gotoxy(0, 1);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0001 00B5 
; 0001 00B6                 first_number = Subroutine_3();
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0001 00B7                 lcd_putchar(first_number);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0001 00B8 
; 0001 00B9                 second_number = Subroutine_3();
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0001 00BA                 lcd_putchar(second_number);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0001 00BB 
; 0001 00BC                 number = (int)(first_number)*10  +  (int)(second_number) ;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0001 00BD                 delay_ms(500);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0001 00BE 
; 0001 00BF                 if ( number >= 0 && number <=50 )
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0001 00C0                 {
; 0001 00C1 
; 0001 00C2                         delay_ms(1500);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0001 00C3                         break;
;PCODE: $0000013B VOL: 0
; 0001 00C4                 }
; 0001 00C5                 else
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0001 00C6                 {
; 0001 00C7                         lcd_clear();
;PCODE: $0000013E VOL: 0
; 0001 00C8                         lcd_gotoxy(0, 0);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0001 00C9                         lcd_puts("EE");
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0001 00CA                         delay_ms(1500);
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0001 00CB                 }
;PCODE: $00000148 VOL: 0
; 0001 00CC       }
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0001 00CD 
; 0001 00CE         while(1)
;PCODE: $0000014B VOL: 0
; 0001 00CF         {
; 0001 00D0                 lcd_clear();
;PCODE: $0000014C VOL: 0
; 0001 00D1                 lcd_gotoxy(0, 0);
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0001 00D2                 lcd_puts("Time:??(0-99s)");
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0001 00D3                 lcd_gotoxy(0, 1);
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0001 00D4 
; 0001 00D5                 first_number = Subroutine_3();
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0001 00D6                 lcd_putchar(first_number);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0001 00D7 
; 0001 00D8                 second_number = Subroutine_3();
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0001 00D9                 lcd_putchar(second_number);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0001 00DA 
; 0001 00DB                 number = (int)(first_number)*10  +  (int)(second_number) ;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0001 00DC                 delay_ms(500);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0001 00DD 
; 0001 00DE                 if ( number >= 0 && number <=99 )
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0001 00DF                 {
; 0001 00E0                         lcd_putchar(first_number);
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0001 00E1                         lcd_putchar(second_number);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0001 00E2                         delay_ms(1500);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0001 00E3                         break;
;PCODE: $00000175 VOL: 0
; 0001 00E4                 }
; 0001 00E5                 else
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0001 00E6                 {
; 0001 00E7                         lcd_clear();
;PCODE: $00000178 VOL: 0
; 0001 00E8                         lcd_gotoxy(0, 0);
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0001 00E9                         lcd_puts("EE");
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0001 00EA                         delay_ms(1500);
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0001 00EB                 }
;PCODE: $00000182 VOL: 0
; 0001 00EC       }
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0001 00ED 
; 0001 00EE       while(1)
;PCODE: $00000185 VOL: 0
; 0001 00EF         {
; 0001 00F0                 lcd_clear();
;PCODE: $00000186 VOL: 0
; 0001 00F1                 lcd_gotoxy(0, 0);
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0001 00F2                 lcd_puts("Weigt:??(0-99F)");
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0001 00F3                 lcd_gotoxy(0, 1);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0001 00F4 
; 0001 00F5                 first_number = Subroutine_3();
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0001 00F6                 lcd_putchar(first_number);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0001 00F7 
; 0001 00F8                 second_number = Subroutine_3();
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0001 00F9                 lcd_putchar(second_number);
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0001 00FA 
; 0001 00FB                 number = (int)(first_number)*10  +  (int)(second_number) ;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0001 00FC                 delay_ms(500);
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0001 00FD 
; 0001 00FE                 if ( number >= 0 && number <=99 )
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0001 00FF                 {
; 0001 0100                         lcd_putchar(first_number);
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0001 0101                         lcd_putchar(second_number);
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0001 0102                         delay_ms(1500);
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0001 0103                         break;
;PCODE: $000001AF VOL: 0
; 0001 0104                 }
; 0001 0105                 else
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0001 0106                 {
; 0001 0107                         lcd_clear();
;PCODE: $000001B2 VOL: 0
; 0001 0108                         lcd_gotoxy(0, 0);
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0001 0109                         lcd_puts("EE");
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0001 010A                         delay_ms(1500);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0001 010B                 }
;PCODE: $000001BC VOL: 0
; 0001 010C       }
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0001 010D 
; 0001 010E        while(1)
;PCODE: $000001BF VOL: 0
; 0001 010F         {
; 0001 0110                 lcd_clear();
;PCODE: $000001C0 VOL: 0
; 0001 0111                 lcd_gotoxy(0, 0);
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0001 0112                 lcd_puts("Temp:??(20-80C)");
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0001 0113                 lcd_gotoxy(0, 1);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0001 0114 
; 0001 0115                 first_number = Subroutine_3();
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0001 0116                 lcd_putchar(first_number);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0001 0117 
; 0001 0118                 second_number = Subroutine_3();
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0001 0119                 lcd_putchar(second_number);
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0001 011A 
; 0001 011B                 number = (int)(first_number)*10  +  (int)(second_number) ;
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0001 011C                 delay_ms(500);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0001 011D 
; 0001 011E                 if ( number >= 20 && number <=80 )
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0001 011F                 {
; 0001 0120                         lcd_putchar(first_number);
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0001 0121                         lcd_putchar(second_number);
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0001 0122                         delay_ms(1500);
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0001 0123                         break;
;PCODE: $000001EA VOL: 0
; 0001 0124                 }
; 0001 0125                 else
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0001 0126                 {
; 0001 0127                         lcd_clear();
;PCODE: $000001ED VOL: 0
; 0001 0128                         lcd_gotoxy(0, 0);
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0001 0129                         lcd_puts("EE");
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0001 012A                         delay_ms(1500);
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0001 012B                 }
;PCODE: $000001F7 VOL: 0
; 0001 012C       }
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0001 012D 
; 0001 012E 
; 0001 012F }
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0

	.DSEG
_0x20025:
	.BYTE 0x49
