
AVRASM ver. 2.1.30  D:\daneshga\terme 7\aze micro\HomeWork2\codevision\question5\Debug\List\5.asm Sun Oct 11 14:21:07 2020

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0034 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a 86bf
00002b cfdb
00002c ede6
00002d 87fd      	.DB  0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87
00002e efff
00002f 063f
000030 4f5b
000031 6d66      	.DB  0xFF,0xEF,0x3F,0x6,0x5B,0x4F,0x66,0x6D
000032 077d
000033 6f7f      	.DB  0x7D,0x7,0x7F,0x6F
                 __RESET:
000034 94f8      	CLI
000035 27ee      	CLR  R30
000036 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000037 e0f1      	LDI  R31,1
000038 bffb      	OUT  GICR,R31
000039 bfeb      	OUT  GICR,R30
00003a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00003b e08d      	LDI  R24,(14-2)+1
00003c e0a2      	LDI  R26,2
00003d 27bb      	CLR  R27
                 __CLEAR_REG:
00003e 93ed      	ST   X+,R30
00003f 958a      	DEC  R24
000040 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000041 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000042 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000043 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000044 93ed      	ST   X+,R30
000045 9701      	SBIW R24,1
000046 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000047 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000048 bfed      	OUT  SPL,R30
000049 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00004a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00004b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00004c e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00004d 940c 00d0 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ; * 5.c
                 ; *
                 ; * Created: 2020-10-11 2:00:13 PM
                 ; * Author: KPS
                 ; */
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;void Subroutine_5(float deghat)
                 ; 0000 000C {
                 
                 	.CSEG
                 _Subroutine_5:
                 ; .FSTART _Subroutine_5
                 ; 0000 000D       char arr[] = {    0b00111111,      // 9  7_segment
                 ; 0000 000E                         0b00000110,      // 8  7_segment
                 ; 0000 000F                         0b01011011,      // 7  7_segment
                 ; 0000 0010                         0b01001111,      // 6  7_segment
                 ; 0000 0011                         0b01100110,      // 5  7_segment
                 ; 0000 0012                         0b01101101,      // 4  7_segment
                 ; 0000 0013                         0b01111101,      // 3  7_segment
                 ; 0000 0014                         0b00000111,      // 2  7_segment
                 ; 0000 0015                         0b01111111,      // 1  7_segment
                 ; 0000 0016                         0b01101111       // 0  7_segment
                 ; 0000 0017                         };
                 ; 0000 0018       char arr2[] = {   0b10111111,      // 9  7_segment with dip points
                 ; 0000 0019                         0b10000110,      // 8  7_segment with dip points
                 ; 0000 001A                         0b11011011,      // 7  7_segment with dip points
                 ; 0000 001B                         0b11001111,      // 6  7_segment with dip points
                 ; 0000 001C                         0b11100110,      // 5  7_segment with dip points
                 ; 0000 001D                         0b11101101,      // 4  7_segment with dip points
                 ; 0000 001E                         0b11111101,      // 3  7_segment with dip points
                 ; 0000 001F                         0b10000111,      // 2  7_segment with dip points
                 ; 0000 0020                         0b11111111,      // 1  7_segment with dip points
                 ; 0000 0021                         0b11101111       // 0  7_segment with dip points
                 ; 0000 0022                         };
                 ; 0000 0023       int number = 0 , counter = 0 , deghat_10 = deghat*10;
                 ; 0000 0024       unsigned int a0 , a1, a2, a3;
                 ; 0000 0025       unsigned int b0 , b1 , b2 , b3;
                 ; 0000 0026       number = PINA;
00004f 940e 020d 	CALL __PUTPARD2
000051 97a4      	SBIW R28,36
000052 e184      	LDI  R24,20
000053 e1a0      	LDI  R26,LOW(16)
000054 e0b0      	LDI  R27,HIGH(16)
000055 e5e4      	LDI  R30,LOW(_0x3*2)
000056 e0f0      	LDI  R31,HIGH(_0x3*2)
000057 940e 0220 	CALL __INITLOCB
000059 940e 0212 	CALL __SAVELOCR6
                 ;	deghat -> Y+42
                 ;	arr -> Y+32
                 ;	arr2 -> Y+22
                 ;	number -> R16,R17
                 ;	counter -> R18,R19
                 ;	deghat_10 -> R20,R21
                 ;	a0 -> Y+20
                 ;	a1 -> Y+18
                 ;	a2 -> Y+16
                 ;	a3 -> Y+14
                 ;	b0 -> Y+12
                 ;	b1 -> Y+10
                 ;	b2 -> Y+8
                 ;	b3 -> Y+6
                +
00005b e000     +LDI R16 , LOW ( 0 )
00005c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00005d e020     +LDI R18 , LOW ( 0 )
00005e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00005f a5aa     +LDD R26 , Y + 42
000060 a5bb     +LDD R27 , Y + 42 + 1
000061 a58c     +LDD R24 , Y + 42 + 2
000062 a59d     +LDD R25 , Y + 42 + 3
                 	__GETD2S 42
                +
000063 e0e0     +LDI R30 , LOW ( 0x41200000 )
000064 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000065 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000066 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000067 940e 016f 	CALL __MULF12
000069 940e 0126 	CALL __CFD1U
00006b 01af      	MOVW R20,R30
00006c b309      	IN   R16,25
00006d 2711      	CLR  R17
                 ; 0000 0027       number = number * 10;
00006e 01f8      	MOVW R30,R16
00006f e0aa      	LDI  R26,LOW(10)
000070 e0b0      	LDI  R27,HIGH(10)
000071 940e 01d1 	CALL __MULW12
000073 018f      	MOVW R16,R30
                 ; 0000 0028       DDRA = 0x00000000;
000074 e0e0      	LDI  R30,LOW(0)
000075 bbea      	OUT  0x1A,R30
                 ; 0000 0029       DDRD = 0b00001111;
000076 e0ef      	LDI  R30,LOW(15)
000077 bbe1      	OUT  0x11,R30
                 ; 0000 002A 
                 ; 0000 002B       while (number >= 0)
                 _0x4:
000078 2311      	TST  R17
000079 f40a      	BRPL PC+2
00007a c051      	RJMP _0x6
                 ; 0000 002C       {
                 ; 0000 002D             a0 = number % 10;
00007b 01d8      	MOVW R26,R16
00007c e0ea      	LDI  R30,LOW(10)
00007d e0f0      	LDI  R31,HIGH(10)
00007e 940e 01f1 	CALL __MODW21
000080 8bec      	STD  Y+20,R30
000081 8bfd      	STD  Y+20+1,R31
                 ; 0000 002E             b0 = number / 10;
000082 01d8      	MOVW R26,R16
000083 e0ea      	LDI  R30,LOW(10)
000084 e0f0      	LDI  R31,HIGH(10)
000085 940e 01e9 	CALL __DIVW21
000087 87ec      	STD  Y+12,R30
000088 87fd      	STD  Y+12+1,R31
                 ; 0000 002F 
                 ; 0000 0030             a1 = b0 % 10;
000089 85ac      	LDD  R26,Y+12
00008a 85bd      	LDD  R27,Y+12+1
00008b d04a      	RCALL SUBOPT_0x0
00008c 8bea      	STD  Y+18,R30
00008d 8bfb      	STD  Y+18+1,R31
                 ; 0000 0031             b1 = b0 / 10;
00008e 85ac      	LDD  R26,Y+12
00008f 85bd      	LDD  R27,Y+12+1
000090 d04a      	RCALL SUBOPT_0x1
000091 87ea      	STD  Y+10,R30
000092 87fb      	STD  Y+10+1,R31
                 ; 0000 0032 
                 ; 0000 0033             a2 = b1 % 10;
000093 85aa      	LDD  R26,Y+10
000094 85bb      	LDD  R27,Y+10+1
000095 d040      	RCALL SUBOPT_0x0
000096 8be8      	STD  Y+16,R30
000097 8bf9      	STD  Y+16+1,R31
                 ; 0000 0034             b2 = b1 / 10;
000098 85aa      	LDD  R26,Y+10
000099 85bb      	LDD  R27,Y+10+1
00009a d040      	RCALL SUBOPT_0x1
00009b 87e8      	STD  Y+8,R30
00009c 87f9      	STD  Y+8+1,R31
                 ; 0000 0035 
                 ; 0000 0036             a3 = b2 % 10;
00009d 85a8      	LDD  R26,Y+8
00009e 85b9      	LDD  R27,Y+8+1
00009f d036      	RCALL SUBOPT_0x0
0000a0 87ee      	STD  Y+14,R30
0000a1 87ff      	STD  Y+14+1,R31
                 ; 0000 0037             b3 = b2 / 10;
0000a2 85a8      	LDD  R26,Y+8
0000a3 85b9      	LDD  R27,Y+8+1
0000a4 d036      	RCALL SUBOPT_0x1
0000a5 83ee      	STD  Y+6,R30
0000a6 83ff      	STD  Y+6+1,R31
                 ; 0000 0038 
                 ; 0000 0039             PORTC = arr[a3];
0000a7 85ee      	LDD  R30,Y+14
0000a8 85ff      	LDD  R31,Y+14+1
0000a9 d036      	RCALL SUBOPT_0x2
                 ; 0000 003A             PORTD = 0b00001110; delay_ms(5);  PORTD = 0b00001111;
0000aa e0ee      	LDI  R30,LOW(14)
0000ab d03b      	RCALL SUBOPT_0x3
                 ; 0000 003B 
                 ; 0000 003C             PORTC = arr[a2];
0000ac 89e8      	LDD  R30,Y+16
0000ad 89f9      	LDD  R31,Y+16+1
0000ae d031      	RCALL SUBOPT_0x2
                 ; 0000 003D             PORTD = 0b00001101; delay_ms(5);  PORTD = 0b00001111;
0000af e0ed      	LDI  R30,LOW(13)
0000b0 d036      	RCALL SUBOPT_0x3
                 ; 0000 003E 
                 ; 0000 003F             PORTC = arr2[a1];
0000b1 89ea      	LDD  R30,Y+18
0000b2 89fb      	LDD  R31,Y+18+1
0000b3 01de      	MOVW R26,R28
0000b4 9656      	ADIW R26,22
0000b5 0fae      	ADD  R26,R30
0000b6 1fbf      	ADC  R27,R31
0000b7 91ec      	LD   R30,X
0000b8 bbe5      	OUT  0x15,R30
                 ; 0000 0040             PORTD = 0b00001011; delay_ms(5);  PORTD = 0b00001111;
0000b9 e0eb      	LDI  R30,LOW(11)
0000ba d02c      	RCALL SUBOPT_0x3
                 ; 0000 0041 
                 ; 0000 0042             PORTC = arr[a0];
0000bb 89ec      	LDD  R30,Y+20
0000bc 89fd      	LDD  R31,Y+20+1
0000bd d022      	RCALL SUBOPT_0x2
                 ; 0000 0043             PORTD = 0b00000111; delay_ms(5);  PORTD = 0b00001111;
0000be e0e7      	LDI  R30,LOW(7)
0000bf d027      	RCALL SUBOPT_0x3
                 ; 0000 0044 
                 ; 0000 0045             counter = counter + 1;
                +
0000c0 5f2f     +SUBI R18 , LOW ( - 1 )
0000c1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0046             if (counter == 20)
0000c2 e1e4      	LDI  R30,LOW(20)
0000c3 e0f0      	LDI  R31,HIGH(20)
0000c4 17e2      	CP   R30,R18
0000c5 07f3      	CPC  R31,R19
0000c6 f421      	BRNE _0x7
                 ; 0000 0047             {
                 ; 0000 0048                   number  = number - deghat_10;
                +
0000c7 1b04     +SUB R16 , R20
0000c8 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0000 0049                   counter = 0;
                +
0000c9 e020     +LDI R18 , LOW ( 0 )
0000ca e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 004A             }
                 ; 0000 004B       }
                 _0x7:
0000cb cfac      	RJMP _0x4
                 _0x6:
                 ; 0000 004C }
0000cc 940e 0219 	CALL __LOADLOCR6
0000ce 96ae      	ADIW R28,46
0000cf 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0050 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0051 while (1)
                 ; 0000 0052     {
                 ; 0000 0053     // Please write your application code here
                 ; 0000 0054         Subroutine_5(0.3);
                +
0000d0 e9aa     +LDI R26 , LOW ( 0x3E99999A )
0000d1 e9b9     +LDI R27 , HIGH ( 0x3E99999A )
0000d2 e989     +LDI R24 , BYTE3 ( 0x3E99999A )
0000d3 e39e     +LDI R25 , BYTE4 ( 0x3E99999A )
                 	__GETD2N 0x3E99999A
0000d4 df7a      	RCALL _Subroutine_5
                 ; 0000 0055         break;
                 ; 0000 0056     }
                 ; 0000 0057 }
                 _0xB:
0000d5 cfff      	RJMP _0xB
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0000d6 e0ea      	LDI  R30,LOW(10)
0000d7 e0f0      	LDI  R31,HIGH(10)
0000d8 940e 01ee 	CALL __MODW21U
0000da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0000db e0ea      	LDI  R30,LOW(10)
0000dc e0f0      	LDI  R31,HIGH(10)
0000dd 940e 01d6 	CALL __DIVW21U
0000df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0000e0 01de      	MOVW R26,R28
0000e1 9690      	ADIW R26,32
0000e2 0fae      	ADD  R26,R30
0000e3 1fbf      	ADC  R27,R31
0000e4 91ec      	LD   R30,X
0000e5 bbe5      	OUT  0x15,R30
0000e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x3:
0000e7 bbe2      	OUT  0x12,R30
0000e8 e0a5      	LDI  R26,LOW(5)
0000e9 e0b0      	LDI  R27,0
0000ea 940e 00ef 	CALL _delay_ms
0000ec e0ef      	LDI  R30,LOW(15)
0000ed bbe2      	OUT  0x12,R30
0000ee 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0000ef 9610      	adiw r26,0
0000f0 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0000f1 ed80     +LDI R24 , LOW ( 0x7D0 )
0000f2 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0000f3 9701     +SBIW R24 , 1
0000f4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0000f5 95a8      	wdr
0000f6 9711      	sbiw r26,1
0000f7 f7c9      	brne __delay_ms0
                 __delay_ms1:
0000f8 9508      	ret
                 
                 __ROUND_REPACK:
0000f9 2355      	TST  R21
0000fa f442      	BRPL __REPACK
0000fb 3850      	CPI  R21,0x80
0000fc f411      	BRNE __ROUND_REPACK0
0000fd ffe0      	SBRS R30,0
0000fe c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0000ff 9631      	ADIW R30,1
000100 1f69      	ADC  R22,R25
000101 1f79      	ADC  R23,R25
000102 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000103 e850      	LDI  R21,0x80
000104 2757      	EOR  R21,R23
000105 f411      	BRNE __REPACK0
000106 935f      	PUSH R21
000107 c055      	RJMP __ZERORES
                 __REPACK0:
000108 3f5f      	CPI  R21,0xFF
000109 f031      	BREQ __REPACK1
00010a 0f66      	LSL  R22
00010b 0c00      	LSL  R0
00010c 9557      	ROR  R21
00010d 9567      	ROR  R22
00010e 2f75      	MOV  R23,R21
00010f 9508      	RET
                 __REPACK1:
000110 935f      	PUSH R21
000111 2000      	TST  R0
000112 f00a      	BRMI __REPACK2
000113 c055      	RJMP __MAXRES
                 __REPACK2:
000114 c04e      	RJMP __MINRES
                 
                 __UNPACK:
000115 e850      	LDI  R21,0x80
000116 2e19      	MOV  R1,R25
000117 2215      	AND  R1,R21
000118 0f88      	LSL  R24
000119 1f99      	ROL  R25
00011a 2795      	EOR  R25,R21
00011b 0f55      	LSL  R21
00011c 9587      	ROR  R24
                 
                 __UNPACK1:
00011d e850      	LDI  R21,0x80
00011e 2e07      	MOV  R0,R23
00011f 2205      	AND  R0,R21
000120 0f66      	LSL  R22
000121 1f77      	ROL  R23
000122 2775      	EOR  R23,R21
000123 0f55      	LSL  R21
000124 9567      	ROR  R22
000125 9508      	RET
                 
                 __CFD1U:
000126 9468      	SET
000127 c001      	RJMP __CFD1U0
                 __CFD1:
000128 94e8      	CLT
                 __CFD1U0:
000129 935f      	PUSH R21
00012a dff2      	RCALL __UNPACK1
00012b 3870      	CPI  R23,0x80
00012c f018      	BRLO __CFD10
00012d 3f7f      	CPI  R23,0xFF
00012e f408      	BRCC __CFD10
00012f c02d      	RJMP __ZERORES
                 __CFD10:
000130 e156      	LDI  R21,22
000131 1b57      	SUB  R21,R23
000132 f4aa      	BRPL __CFD11
000133 9551      	NEG  R21
000134 3058      	CPI  R21,8
000135 f40e      	BRTC __CFD19
000136 3059      	CPI  R21,9
                 __CFD19:
000137 f030      	BRLO __CFD17
000138 efef      	SER  R30
000139 efff      	SER  R31
00013a ef6f      	SER  R22
00013b e77f      	LDI  R23,0x7F
00013c f977      	BLD  R23,7
00013d c01a      	RJMP __CFD15
                 __CFD17:
00013e 2777      	CLR  R23
00013f 2355      	TST  R21
000140 f0b9      	BREQ __CFD15
                 __CFD18:
000141 0fee      	LSL  R30
000142 1fff      	ROL  R31
000143 1f66      	ROL  R22
000144 1f77      	ROL  R23
000145 955a      	DEC  R21
000146 f7d1      	BRNE __CFD18
000147 c010      	RJMP __CFD15
                 __CFD11:
000148 2777      	CLR  R23
                 __CFD12:
000149 3058      	CPI  R21,8
00014a f028      	BRLO __CFD13
00014b 2fef      	MOV  R30,R31
00014c 2ff6      	MOV  R31,R22
00014d 2f67      	MOV  R22,R23
00014e 5058      	SUBI R21,8
00014f cff9      	RJMP __CFD12
                 __CFD13:
000150 2355      	TST  R21
000151 f031      	BREQ __CFD15
                 __CFD14:
000152 9576      	LSR  R23
000153 9567      	ROR  R22
000154 95f7      	ROR  R31
000155 95e7      	ROR  R30
000156 955a      	DEC  R21
000157 f7d1      	BRNE __CFD14
                 __CFD15:
000158 2000      	TST  R0
000159 f40a      	BRPL __CFD16
00015a d066      	RCALL __ANEGD1
                 __CFD16:
00015b 915f      	POP  R21
00015c 9508      	RET
                 
                 __ZERORES:
00015d 27ee      	CLR  R30
00015e 27ff      	CLR  R31
00015f 2766      	CLR  R22
000160 2777      	CLR  R23
000161 915f      	POP  R21
000162 9508      	RET
                 
                 __MINRES:
000163 efef      	SER  R30
000164 efff      	SER  R31
000165 e76f      	LDI  R22,0x7F
000166 ef7f      	SER  R23
000167 915f      	POP  R21
000168 9508      	RET
                 
                 __MAXRES:
000169 efef      	SER  R30
00016a efff      	SER  R31
00016b e76f      	LDI  R22,0x7F
00016c e77f      	LDI  R23,0x7F
00016d 915f      	POP  R21
00016e 9508      	RET
                 
                 __MULF12:
00016f 935f      	PUSH R21
000170 dfa4      	RCALL __UNPACK
000171 3870      	CPI  R23,0x80
000172 f351      	BREQ __ZERORES
000173 3890      	CPI  R25,0x80
000174 f341      	BREQ __ZERORES
000175 2401      	EOR  R0,R1
000176 9408      	SEC
000177 1f79      	ADC  R23,R25
000178 f423      	BRVC __MULF124
000179 f31c      	BRLT __ZERORES
                 __MULF125:
00017a 2000      	TST  R0
00017b f33a      	BRMI __MINRES
00017c cfec      	RJMP __MAXRES
                 __MULF124:
00017d 920f      	PUSH R0
00017e 931f      	PUSH R17
00017f 932f      	PUSH R18
000180 933f      	PUSH R19
000181 934f      	PUSH R20
000182 2711      	CLR  R17
000183 2722      	CLR  R18
000184 2799      	CLR  R25
000185 9f68      	MUL  R22,R24
000186 01a0      	MOVW R20,R0
000187 9f8f      	MUL  R24,R31
000188 2d30      	MOV  R19,R0
000189 0d41      	ADD  R20,R1
00018a 1f59      	ADC  R21,R25
00018b 9f6b      	MUL  R22,R27
00018c 0d30      	ADD  R19,R0
00018d 1d41      	ADC  R20,R1
00018e 1f59      	ADC  R21,R25
00018f 9f8e      	MUL  R24,R30
000190 d027      	RCALL __MULF126
000191 9fbf      	MUL  R27,R31
000192 d025      	RCALL __MULF126
000193 9f6a      	MUL  R22,R26
000194 d023      	RCALL __MULF126
000195 9fbe      	MUL  R27,R30
000196 d01d      	RCALL __MULF127
000197 9faf      	MUL  R26,R31
000198 d01b      	RCALL __MULF127
000199 9fae      	MUL  R26,R30
00019a 0d11      	ADD  R17,R1
00019b 1f29      	ADC  R18,R25
00019c 1f39      	ADC  R19,R25
00019d 1f49      	ADC  R20,R25
00019e 1f59      	ADC  R21,R25
00019f 2fe3      	MOV  R30,R19
0001a0 2ff4      	MOV  R31,R20
0001a1 2f65      	MOV  R22,R21
0001a2 2f52      	MOV  R21,R18
0001a3 914f      	POP  R20
0001a4 913f      	POP  R19
0001a5 912f      	POP  R18
0001a6 911f      	POP  R17
0001a7 900f      	POP  R0
0001a8 2366      	TST  R22
0001a9 f02a      	BRMI __MULF122
0001aa 0f55      	LSL  R21
0001ab 1fee      	ROL  R30
0001ac 1fff      	ROL  R31
0001ad 1f66      	ROL  R22
0001ae c002      	RJMP __MULF123
                 __MULF122:
0001af 9573      	INC  R23
0001b0 f24b      	BRVS __MULF125
                 __MULF123:
0001b1 df47      	RCALL __ROUND_REPACK
0001b2 915f      	POP  R21
0001b3 9508      	RET
                 
                 __MULF127:
0001b4 0d10      	ADD  R17,R0
0001b5 1d21      	ADC  R18,R1
0001b6 1f39      	ADC  R19,R25
0001b7 c002      	RJMP __MULF128
                 __MULF126:
0001b8 0d20      	ADD  R18,R0
0001b9 1d31      	ADC  R19,R1
                 __MULF128:
0001ba 1f49      	ADC  R20,R25
0001bb 1f59      	ADC  R21,R25
0001bc 9508      	RET
                 
                 __ANEGW1:
0001bd 95f1      	NEG  R31
0001be 95e1      	NEG  R30
0001bf 40f0      	SBCI R31,0
0001c0 9508      	RET
                 
                 __ANEGD1:
0001c1 95f0      	COM  R31
0001c2 9560      	COM  R22
0001c3 9570      	COM  R23
0001c4 95e1      	NEG  R30
0001c5 4fff      	SBCI R31,-1
0001c6 4f6f      	SBCI R22,-1
0001c7 4f7f      	SBCI R23,-1
0001c8 9508      	RET
                 
                 __MULW12U:
0001c9 9ffa      	MUL  R31,R26
0001ca 2df0      	MOV  R31,R0
0001cb 9feb      	MUL  R30,R27
0001cc 0df0      	ADD  R31,R0
0001cd 9fea      	MUL  R30,R26
0001ce 2de0      	MOV  R30,R0
0001cf 0df1      	ADD  R31,R1
0001d0 9508      	RET
                 
                 __MULW12:
0001d1 d02d      	RCALL __CHKSIGNW
0001d2 dff6      	RCALL __MULW12U
0001d3 f40e      	BRTC __MULW121
0001d4 dfe8      	RCALL __ANEGW1
                 __MULW121:
0001d5 9508      	RET
                 
                 __DIVW21U:
0001d6 2400      	CLR  R0
0001d7 2411      	CLR  R1
0001d8 e190      	LDI  R25,16
                 __DIVW21U1:
0001d9 0faa      	LSL  R26
0001da 1fbb      	ROL  R27
0001db 1c00      	ROL  R0
0001dc 1c11      	ROL  R1
0001dd 1a0e      	SUB  R0,R30
0001de 0a1f      	SBC  R1,R31
0001df f418      	BRCC __DIVW21U2
0001e0 0e0e      	ADD  R0,R30
0001e1 1e1f      	ADC  R1,R31
0001e2 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0001e3 60a1      	SBR  R26,1
                 __DIVW21U3:
0001e4 959a      	DEC  R25
0001e5 f799      	BRNE __DIVW21U1
0001e6 01fd      	MOVW R30,R26
0001e7 01d0      	MOVW R26,R0
0001e8 9508      	RET
                 
                 __DIVW21:
0001e9 d015      	RCALL __CHKSIGNW
0001ea dfeb      	RCALL __DIVW21U
0001eb f40e      	BRTC __DIVW211
0001ec dfd0      	RCALL __ANEGW1
                 __DIVW211:
0001ed 9508      	RET
                 
                 __MODW21U:
0001ee dfe7      	RCALL __DIVW21U
0001ef 01fd      	MOVW R30,R26
0001f0 9508      	RET
                 
                 __MODW21:
0001f1 94e8      	CLT
0001f2 ffb7      	SBRS R27,7
0001f3 c004      	RJMP __MODW211
0001f4 95a0      	COM  R26
0001f5 95b0      	COM  R27
0001f6 9611      	ADIW R26,1
0001f7 9468      	SET
                 __MODW211:
0001f8 fdf7      	SBRC R31,7
0001f9 dfc3      	RCALL __ANEGW1
0001fa dfdb      	RCALL __DIVW21U
0001fb 01fd      	MOVW R30,R26
0001fc f40e      	BRTC __MODW212
0001fd dfbf      	RCALL __ANEGW1
                 __MODW212:
0001fe 9508      	RET
                 
                 __CHKSIGNW:
0001ff 94e8      	CLT
000200 fff7      	SBRS R31,7
000201 c002      	RJMP __CHKSW1
000202 dfba      	RCALL __ANEGW1
000203 9468      	SET
                 __CHKSW1:
000204 ffb7      	SBRS R27,7
000205 c006      	RJMP __CHKSW2
000206 95a0      	COM  R26
000207 95b0      	COM  R27
000208 9611      	ADIW R26,1
000209 f800      	BLD  R0,0
00020a 9403      	INC  R0
00020b fa00      	BST  R0,0
                 __CHKSW2:
00020c 9508      	RET
                 
                 __PUTPARD2:
00020d 939a      	ST   -Y,R25
00020e 938a      	ST   -Y,R24
00020f 93ba      	ST   -Y,R27
000210 93aa      	ST   -Y,R26
000211 9508      	RET
                 
                 __SAVELOCR6:
000212 935a      	ST   -Y,R21
                 __SAVELOCR5:
000213 934a      	ST   -Y,R20
                 __SAVELOCR4:
000214 933a      	ST   -Y,R19
                 __SAVELOCR3:
000215 932a      	ST   -Y,R18
                 __SAVELOCR2:
000216 931a      	ST   -Y,R17
000217 930a      	ST   -Y,R16
000218 9508      	RET
                 
                 __LOADLOCR6:
000219 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00021a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00021b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00021c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00021d 8119      	LDD  R17,Y+1
00021e 8108      	LD   R16,Y
00021f 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000220 0fac      	ADD  R26,R28
000221 1fbd      	ADC  R27,R29
                 __INITLOC0:
000222 9005      	LPM  R0,Z+
000223 920d      	ST   X+,R0
000224 958a      	DEC  R24
000225 f7e1      	BRNE __INITLOC0
000226 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  27 r1 :  13 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   9 r17:  11 r18:  13 r19:  14 r20:  12 r21:  45 r22:  22 r23:  25 
r24:  16 r25:  24 r26:  40 r27:  25 r28:   6 r29:   2 r30:  74 r31:  49 
x  :   5 y  :  56 z  :   1 
Registers used: 21 out of 35 (60.0%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  19 add   :  11 
adiw  :   7 and   :   2 andi  :   0 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :   6 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   3 
brlt  :   1 brmi  :   3 brne  :  11 brpl  :   4 brsh  :   0 brtc  :   4 
brts  :   0 brvc  :   1 brvs  :   2 bset  :   0 bst   :   1 call  :  12 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  14 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   7 
cp    :   1 cpc   :   1 cpi   :   9 cpse  :   0 dec   :   5 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   2 jmp   :  22 ld    :   3 ldd   :  29 ldi   :  61 
lds   :   0 lpm   :   1 lsl   :   9 lsr   :   1 mov   :  13 movw  :  12 
mul   :  12 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   0 
ori   :   0 out   :  12 pop   :  10 push  :   9 rcall :  34 ret   :  27 
reti  :   0 rjmp  :  19 rol   :  11 ror   :   7 sbc   :   2 sbci  :   5 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   4 sbr   :   1 sbrc  :   1 
sbrs  :   4 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  13 std   :  16 sts   :   0 sub   :   3 subi  :   2 swap  :   0 
tst   :   8 wdr   :   1 
Instructions used: 62 out of 116 (53.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00044e   1082     20   1102   16384   6.7%
[.dseg] 0x000060 0x000160      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
