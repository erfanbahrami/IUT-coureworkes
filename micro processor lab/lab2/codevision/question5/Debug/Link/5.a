;/*
; * 5.c
; *
; * Created: 2020-10-11 2:00:13 PM
; * Author: KPS
; */
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;void Subroutine_5(float deghat)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D       char arr[] = {    0b00111111,      // 9  7_segment
; 0000 000E                         0b00000110,      // 8  7_segment
; 0000 000F                         0b01011011,      // 7  7_segment
; 0000 0010                         0b01001111,      // 6  7_segment
; 0000 0011                         0b01100110,      // 5  7_segment
; 0000 0012                         0b01101101,      // 4  7_segment
; 0000 0013                         0b01111101,      // 3  7_segment
; 0000 0014                         0b00000111,      // 2  7_segment
; 0000 0015                         0b01111111,      // 1  7_segment
; 0000 0016                         0b01101111       // 0  7_segment
; 0000 0017                         };
; 0000 0018       char arr2[] = {   0b10111111,      // 9  7_segment with dip points
; 0000 0019                         0b10000110,      // 8  7_segment with dip points
; 0000 001A                         0b11011011,      // 7  7_segment with dip points
; 0000 001B                         0b11001111,      // 6  7_segment with dip points
; 0000 001C                         0b11100110,      // 5  7_segment with dip points
; 0000 001D                         0b11101101,      // 4  7_segment with dip points
; 0000 001E                         0b11111101,      // 3  7_segment with dip points
; 0000 001F                         0b10000111,      // 2  7_segment with dip points
; 0000 0020                         0b11111111,      // 1  7_segment with dip points
; 0000 0021                         0b11101111       // 0  7_segment with dip points
; 0000 0022                         };
; 0000 0023       int number = 0 , counter = 0 , deghat_10 = deghat*10;
; 0000 0024       unsigned int a0 , a1, a2, a3;
; 0000 0025       unsigned int b0 , b1 , b2 , b3;
; 0000 0026       number = PINA;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;	deghat -> Y+42
;	arr -> Y+32
;	arr2 -> Y+22
;	number -> R16,R17
;	counter -> R18,R19
;	deghat_10 -> R20,R21
;	a0 -> Y+20
;	a1 -> Y+18
;	a2 -> Y+16
;	a3 -> Y+14
;	b0 -> Y+12
;	b1 -> Y+10
;	b2 -> Y+8
;	b3 -> Y+6
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0027       number = number * 10;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0028       DDRA = 0x00000000;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0029       DDRD = 0b00001111;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002A 
; 0000 002B       while (number >= 0)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002C       {
; 0000 002D             a0 = number % 10;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002E             b0 = number / 10;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002F 
; 0000 0030             a1 = b0 % 10;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0031             b1 = b0 / 10;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0032 
; 0000 0033             a2 = b1 % 10;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0034             b2 = b1 / 10;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0035 
; 0000 0036             a3 = b2 % 10;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0037             b3 = b2 / 10;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0038 
; 0000 0039             PORTC = arr[a3];
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 003A             PORTD = 0b00001110; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 003B 
; 0000 003C             PORTC = arr[a2];
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003D             PORTD = 0b00001101; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 003E 
; 0000 003F             PORTC = arr2[a1];
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0040             PORTD = 0b00001011; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0041 
; 0000 0042             PORTC = arr[a0];
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0043             PORTD = 0b00000111; delay_ms(5);  PORTD = 0b00001111;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0044 
; 0000 0045             counter = counter + 1;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0046             if (counter == 20)
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0047             {
; 0000 0048                   number  = number - deghat_10;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0049                   counter = 0;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 004A             }
; 0000 004B       }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 004C }
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;
;
;void main(void)
; 0000 0050 {
;PCODE: $0000008D VOL: 0
; 0000 0051 while (1)
;PCODE: $0000008E VOL: 0
; 0000 0052     {
; 0000 0053     // Please write your application code here
; 0000 0054         Subroutine_5(0.3);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0055         break;
;PCODE: $00000091 VOL: 0
; 0000 0056     }
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0057 }
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
