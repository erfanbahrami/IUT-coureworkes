;/*
; * 2.c
; *
; * Created: 2020-10-11 3:25:38 AM
; * Author: KPS
; */
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;void Subroutine_2(int location , int time)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D     int counter = location-1;
; 0000 000E     int d = (time / ( 8 - location ));
; 0000 000F     DDRB = 0xFF;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	location -> Y+6
;	time -> Y+4
;	counter -> R16,R17
;	d -> R18,R19
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0010     while ( counter < 8 )
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0011     {
; 0000 0012         PORTB |= 1 << counter;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0013         delay_ms(d);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0014         PORTB &= ~(1 << counter);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0015         counter++;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0016     }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0017 
; 0000 0018 }
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;
;
;void main(void)
; 0000 001C {
;PCODE: $00000039 VOL: 0
; 0000 001D while (1)
;PCODE: $0000003A VOL: 0
; 0000 001E     {
; 0000 001F     // Please write your application code here
; 0000 0020         Subroutine_2(3 , 3000);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0021         break;
;PCODE: $0000003F VOL: 0
; 0000 0022     }
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0023 }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
